# Generated by Django 2.1.5 on 2019-01-29 18:20

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last Name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('dob', models.DateField(blank=True, verbose_name='Date of Birth')),
                ('reg_num', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(regex='^[0-9A-Za-z]')], verbose_name='Registration Number')),
                ('phn_num', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}')], verbose_name='Phone Number')),
                ('gender', models.CharField(blank=True, choices=[('Other', 'other'), ('Male', 'male'), ('Female', 'female')], max_length=7, verbose_name='Gender')),
                ('stream', models.CharField(blank=True, choices=[('it', 'IT'), ('ece', 'ECE'), ('civil', 'CIVIL'), ('eee', 'EEE'), ('mech', 'MECH'), ('cse', 'CSE')], max_length=5, verbose_name='Stream')),
                ('course', models.CharField(blank=True, choices=[('btech', 'B Tech'), ('mtech', 'M Tech'), ('mba', 'M Ba'), ('msc', 'M Sc'), ('bsc', 'B Sc')], max_length=25, verbose_name='Course')),
                ('is_cr', models.BooleanField(blank=True, default=False, verbose_name='Class Representative')),
                ('is_faculty', models.BooleanField(blank=True, default=False, verbose_name='Faculty')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='Staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
    ]
